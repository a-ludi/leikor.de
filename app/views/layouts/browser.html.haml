- content_for :body do
  #categories{:class => (@categories.empty? ? 'empty' : nil)}
    %h1{:style => "display: none;"} Kategorien-Browser
    %ul#categories_list.navigation
      - for category in @categories
        %li{:id => "categoryBrowser_#{category.id.to_s}"}
          = render(:partial => 'layouts/category_link', :locals => {:label => category.name,
            :path => category_path(category.url_hash), :css_class => positional_class(category,
            @categories, category === @category ? 'selected' : ''),
            :show_handle => logged_in?(Employee)})
          - if category === @category
            - unless @category.subcategories.empty?
              .subcategory
                %ul#subcategories_list.navigation
                  - for subcategory in @category.subcategories
                    %li{:id => "subcategoryBrowser_#{subcategory.id.to_s}"}
                      = render(:partial => 'layouts/category_link',
                        :locals => { :label => subcategory.name,
                        :path => subcategory_path(subcategory.url_hash),
                        :css_class => positional_class(subcategory, @category.subcategories,
                        subcategory === @subcategory ? 'selected' : ''),
                        :show_handle => logged_in?(Employee)})
                .clear
    .clear
  - if logged_in? Employee
    - sortables = ['categories_list']
    - sortables << 'subcategories_list' unless @category.nil?
    - sortables.each do |html_id|
      = sortable_element(html_id, :url => reorder_categories_path,
        :onChange => 'MyUtils.recreatePositionalClasses', :handle => 'handle')
  - if @scroll_target
    :javascript
      if(document.viewport.getWidth() <= 470) {
        target = '#{@scroll_target}';
        if(window.location.hash != '')
          target = window.location.hash.substr(1);
        
        Effect.ScrollTo(target, {duration: 1.0, offset: -8});
      }
  #content{:class => (@categories.empty? ? 'empty' : nil)}
    = yield
= render :file => 'layouts/application'
